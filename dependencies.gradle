repositories {
    mavenLocal()
    jcenter()
}

ext.kotlinVersion = '1.3.70'

ext {
    /**
     * Libraries.
     */

    /* Core */
    kotlinStdlib = 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    ktorNetty = 'io.ktor:ktor-server-netty'
    ktorTest = 'io.ktor:ktor-server-tests'
    ktorLocations = 'io.ktor:ktor-locations'
    ktorJwt = 'io.ktor:ktor-auth-jwt'
    ktorLocations = 'io.ktor:ktor-locations'
    logback = 'ch.qos.logback:logback-classic'

    /* Network */
    okHttpLogging = 'com.squareup.okhttp3:logging-interceptor'
    retrofit2 = 'com.squareup.retrofit2:retrofit'
    retrofit2GsonConverter = 'com.squareup.retrofit2:converter-gson'
    retrofitMoshiConverter = 'com.squareup.retrofit2:converter-moshi'

    gson = 'io.ktor:ktor-gson'
    moshi = 'com.ryanharter.ktor:ktor-moshi'
    moshiAdapters = 'com.squareup.moshi:moshi-adapters'
    moshiCodegen = 'com.squareup.moshi:moshi-kotlin-codegen'

    /* Storage */
    exposed = 'org.jetbrains.exposed:exposed'
    h2 = 'com.h2database:h2'
    hikaricp = 'com.zaxxer:HikariCP'
    postgres = 'org.postgresql:postgresql'

    /**
     * Versions.
     */

    /* Core */
    kotlinStdlibVersion = kotlinVersion
    logbackVersion = '1.2.1'

    /* Network */
    okHttpLoggingVersion = '3.8.1'
    retrofit2Version = '2.7.0'

    moshiVersion = '1.0.1'
    moshiAdaptersVersion = '1.8.0'
    moshiCodegenVersion = '1.8.0'

    /* Storage */
    exposedVersion = '0.13.5'
    h2Version = '1.4.199'
    hikaricpVersion = '3.3.1'
    postgresVersion = '42.2.4.jre7'

    appDependencies = [
            kotlinStdlib          : "${kotlinStdlib}:${kotlinStdlibVersion}",

            ktorNetty             : "${ktorNetty}:${ktorVersion}",
            ktorTest              : "${ktorTest}:${ktorVersion}",
            ktorLocations         : "${ktorLocations}:${ktorVersion}",
            ktorJwt               : "${ktorJwt}:${ktorVersion}",
            logback               : "${logback}:${logbackVersion}",

            okHttpLogging         : "${okHttpLogging}:${okHttpLoggingVersion}",
            retrofit2             : "${retrofit2}:${retrofit2Version}",
            retrofit2GsonConverter: "${retrofit2GsonConverter}:${retrofit2Version}",
            retrofitMoshiConverter: "${retrofitMoshiConverter}:${retrofit2Version}",

            moshi                 : "${moshi}:${moshiVersion}",
            moshiAdapters         : "${moshiAdapters}:${moshiAdaptersVersion}",
            moshiCodegen          : "${moshiCodegen}:${moshiCodegenVersion}",
            gson                  : "${gson}:${ktorVersion}",

            exposed               : "${exposed}:${exposedVersion}",
            h2                    : "${h2}:${h2Version}",
            hikaricp              : "${hikaricp}:${hikaricpVersion}",
            postgres              : "${postgres}:${postgresVersion}"
    ]
}